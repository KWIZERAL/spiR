}
f(b="2018")
f <- function(a = c("CAN", "USA"), b = "2019") {
SPI_data <- gsheet::gsheet2tbl("https://docs.google.com/spreadsheets/d/1_nQ9mQU_4J0KDRc4_TMzTsJHMYBqLwwnPaMC5BVhkGc/edit#gid=0")
mydata <- SPI_data %>% filter(code == a) %>% filter(year == b)
mydata
}
f(b="2018")
f <- function(a = c("CAN", "USA"), b = "2019") {
SPI_data <- gsheet::gsheet2tbl("https://docs.google.com/spreadsheets/d/1_nQ9mQU_4J0KDRc4_TMzTsJHMYBqLwwnPaMC5BVhkGc/edit#gid=0")
mydata <- SPI_data %>% filter(code == a) %>% filter(year == b)
data.frame(mydata)
}
f(b="2018")
f <- function(a = c("CAN", "USA"), b = "2019") {
SPI_data <- gsheet::gsheet2tbl("https://docs.google.com/spreadsheets/d/1_nQ9mQU_4J0KDRc4_TMzTsJHMYBqLwwnPaMC5BVhkGc/edit#gid=0")
mydata <- SPI_data %>% filter(code == a) %>% filter(year == b)
data.frame(mydata)
}
f(a="USA", b="2018")
f(a="USA", b="2019")
f(b="2018")
f <- function(a = c(CAN, USA), b = "2019") {
SPI_data <- gsheet::gsheet2tbl("https://docs.google.com/spreadsheets/d/1_nQ9mQU_4J0KDRc4_TMzTsJHMYBqLwwnPaMC5BVhkGc/edit#gid=0")
mydata <- SPI_data %>% filter(code == a) %>% filter(year == b)
data.frame(mydata)
}
f(b="2018")
f <- function(a = c("CAN", "USA"), b = "2019") {
SPI_data <- gsheet::gsheet2tbl("https://docs.google.com/spreadsheets/d/1_nQ9mQU_4J0KDRc4_TMzTsJHMYBqLwwnPaMC5BVhkGc/edit#gid=0")
mydata <- SPI_data %>% filter(code == a) %>% filter(year == b)
data.frame(mydata)
}
f(a=c("USA", "FRA"), b="2018")
f(b="2018")
f <- function(a = c("FRA", "USA", "CAN"), b = "2019") {
SPI_data <- gsheet::gsheet2tbl("https://docs.google.com/spreadsheets/d/1_nQ9mQU_4J0KDRc4_TMzTsJHMYBqLwwnPaMC5BVhkGc/edit#gid=0")
mydata <- SPI_data %>% filter(code == a) %>% filter(year == b)
data.frame(mydata)
}
f(b="2018")
f <- function(a = c("FRA", "USA", "CAN"), b = "2019") {
SPI_data <- gsheet::gsheet2tbl("https://docs.google.com/spreadsheets/d/1_nQ9mQU_4J0KDRc4_TMzTsJHMYBqLwwnPaMC5BVhkGc/edit#gid=0")
mydata <- SPI_data %>% filter(code == a) %>% filter(year == b)
mydata <- data.frame(mydata)
}
f(a=c("USA", "FRA"), b="2018")
f(b="2018")
f <- function(a = c("FRA", "USA", "CAN"), b = "2019") {
SPI_data <- gsheet::gsheet2tbl("https://docs.google.com/spreadsheets/d/1_nQ9mQU_4J0KDRc4_TMzTsJHMYBqLwwnPaMC5BVhkGc/edit#gid=0")
SPI_data %>% filter(code == a) %>% filter(year == b)
}
f(a=c("USA", "FRA"), b="2018")
f(b="2018")
f <- function(a = c("FRA", "USA", "CAN"), b = "2019") {
SPI_data <- gsheet::gsheet2tbl("https://docs.google.com/spreadsheets/d/1_nQ9mQU_4J0KDRc4_TMzTsJHMYBqLwwnPaMC5BVhkGc/edit#gid=0")
SPI_data %>% filter(code == a) %>% filter(year == b) %>% filter(INDICATOR_CODE == "SPI")
}
f(a=c("USA", "FRA"), b="2018")
f <- function(a = c("FRA", "USA", "CAN"), b = "2019") {
SPI_data <- gsheet::gsheet2tbl("https://docs.google.com/spreadsheets/d/1_nQ9mQU_4J0KDRc4_TMzTsJHMYBqLwwnPaMC5BVhkGc/edit#gid=0")
SPI_data %>% filter(code == a) %>% filter(year == b) %>% select(SPI_data$SPI)
}
f(a=c("USA", "FRA"), b="2018")
f <- function(a = c("FRA", "USA", "CAN"), b = "2019") {
SPI_data <- gsheet::gsheet2tbl("https://docs.google.com/spreadsheets/d/1_nQ9mQU_4J0KDRc4_TMzTsJHMYBqLwwnPaMC5BVhkGc/edit#gid=0")
SPI_data %>% filter(code == a) %>% filter(year == b)
}
f(a="USA", b="2019")
f(a=c("USA", "FRA"), b="2018")
f("2018")
f(b="2018")
f(,"2018")
code = c("FRA", "USA", "CAN", "DEN")
year = c(2014:2019)
f <- function(a = c("FRA", "USA", "CAN"), b = "2019") {
SPI_data <- gsheet::gsheet2tbl("https://docs.google.com/spreadsheets/d/1_nQ9mQU_4J0KDRc4_TMzTsJHMYBqLwwnPaMC5BVhkGc/edit#gid=0")
SPI_data %>% filter(code == a) %>% filter(year == b)
}
f(a=c("USA", "FRA"), b="2018")
SPI_data <- code + year
SPI_data <- c(code, year)
code = c("FRA", "USA", "CAN", "DEN")
year = c(2014:2019)
f <- function(a = c("FRA", "USA", "CAN"), b = "2019") {
SPI_data <- c(code, year)
SPI_data %>% filter(code == a) %>% filter(year == b)
}
f(a=c("USA", "FRA"), b="2018")
View(SPI_data)
SPI_data <- merge(code, year)
View(SPI_data)
code = c("FRA", "USA", "CAN", "DEN")
year = c(2014:2019)
f <- function(a = c("FRA", "USA", "CAN"), b = "2019") {
SPI_data <- merge(code, year)
SPI_data %>% filter(code == a) %>% filter(year == b)
}
f(a=c("USA", "FRA"), b="2018")
f(a="USA", b="2019")
f(,"2018")
View(SPI_data)
f(a="USA", b="2019")
code = c("FRA", "USA", "CAN", "DEN")
year = c(2014:2019)
f <- function(a = c("FRA", "USA", "CAN"), b = "2019") {
SPI_data <- merge(code, year)
SPI_data %>% filter(code == a) %>% filter(year == b)
}
f(a="USA", b="2019")
mydata = c(1:24)
SPI_data <- merge(code, year, mydata)
code = c("FRA", "USA", "CAN", "DEN")
year = c(2014:2019)
mydata = c(1:24)
f <- function(a = c("FRA", "USA", "CAN"), b = "2019") {
SPI_data <- merge(code, year, mydata)
SPI_data %>% filter(code == a) %>% filter(year == b)
}
View(SPI_data)
f(,"2018")
sqs_spi_data <- function(COUNTRY_CODE, YEAR) {
SPI_data <- gsheet::gsheet2tbl("https://docs.google.com/spreadsheets/d/1OWdDf8ibm_QmmOGiuTu9R1ZN6mDg-Hqf9qdJjkp6UyU/edit?usp=sharing")
switch()
mydata <- SPI_data %>%
filter(code == COUNTRY_CODE) %>%
filter(year == YEAR)
}
f(a=c("USA", "FRA"), b="2018")
f(a="USA", b="2019")
sqs_spi_data("USA", "2015")
sqs_spi_data <- function(COUNTRY_CODE, YEAR) {
SPI_data <- gsheet::gsheet2tbl("https://docs.google.com/spreadsheets/d/1OWdDf8ibm_QmmOGiuTu9R1ZN6mDg-Hqf9qdJjkp6UyU/edit?usp=sharing")
switch()
mydata <- SPI_data %>%
filter(code == COUNTRY_CODE) %>%
filter(year == YEAR)
}
sqs_spi_data("USA", "2015")
f <- function(a = c("FRA", "USA", "CAN"), b = "2019") {
SPI_data <- gsheet::gsheet2tbl("https://docs.google.com/spreadsheets/d/1OWdDf8ibm_QmmOGiuTu9R1ZN6mDg-Hqf9qdJjkp6UyU/edit?usp=sharing")
out <- SPI_data %>% filter(code == a) %>% filter(year == b)
return(out)
}
f(a=c("USA", "FRA"), b="2018")
f(a="USA", b="2019")
f(,"2018")
SPI_data <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1_nQ9mQU_4J0KDRc4_TMzTsJHMYBqLwwnPaMC5BVhkGc/edit#gid=0")
SPI_country <- unique(SPI_data[,1:2])
library(gsheet)
SPI_data <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1_nQ9mQU_4J0KDRc4_TMzTsJHMYBqLwwnPaMC5BVhkGc/edit#gid=0")
SPI_country <- unique(SPI_data[,1:2])
View(SPI_country)
f(,"2018")
f <- function(a = ., b = "2019") {
SPI_data <- gsheet::gsheet2tbl("https://docs.google.com/spreadsheets/d/1OWdDf8ibm_QmmOGiuTu9R1ZN6mDg-Hqf9qdJjkp6UyU/edit?usp=sharing")
out <- SPI_data %>% filter(code == a) %>% filter(year == b)
return(out)
}
f(,"2018")
f(a=c("USA", "FRA"), b="2018")
-----------------------------------------------------------------------------------------------------------------------------------------------------------
sqs_spi_country <- function(COUNTRY){
SPI_data <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1_nQ9mQU_4J0KDRc4_TMzTsJHMYBqLwwnPaMC5BVhkGc/edit#gid=0")
SPI_country <- unique(SPI_data[,1:2])
if (missing(COUNTRY)) {
SPI_country
} else {
SPI_country[grep(COUNTRY,SPI_country$country),]
}
f <- function(a = SPI_country, b = "2019") {
SPI_data <- gsheet::gsheet2tbl("https://docs.google.com/spreadsheets/d/1OWdDf8ibm_QmmOGiuTu9R1ZN6mDg-Hqf9qdJjkp6UyU/edit?usp=sharing")
out <- SPI_data %>% filter(code == a) %>% filter(year == b)
return(out)
}
}
sqs_spi_country <- function(COUNTRY){
SPI_data <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1_nQ9mQU_4J0KDRc4_TMzTsJHMYBqLwwnPaMC5BVhkGc/edit#gid=0")
SPI_country <- unique(SPI_data[,1:2])
if (missing(COUNTRY)) {
SPI_country
} else {
SPI_country[grep(COUNTRY,SPI_country$country),]
}
f <- function(a = SPI_country, b = "2019") {
SPI_data <- gsheet::gsheet2tbl("https://docs.google.com/spreadsheets/d/1OWdDf8ibm_QmmOGiuTu9R1ZN6mDg-Hqf9qdJjkp6UyU/edit?usp=sharing")
out <- SPI_data %>% filter(code == a) %>% filter(year == b)
return(out)
}
}
f(a="USA", b="2019")
f(a=c("USA", "FRA"), b="2018")
f(,"2018")
sqs_spi_country <- function(COUNTRY){
SPI_data <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1_nQ9mQU_4J0KDRc4_TMzTsJHMYBqLwwnPaMC5BVhkGc/edit#gid=0")
SPI_country <- unique(SPI_data[,1:2])
if (missing(COUNTRY)) {
SPI_country
} else {
SPI_country[grep(COUNTRY,SPI_country$country),]
}
f <- function(a = SPI_country, b = "2019") {
SPI_data <- gsheet::gsheet2tbl("https://docs.google.com/spreadsheets/d/1OWdDf8ibm_QmmOGiuTu9R1ZN6mDg-Hqf9qdJjkp6UyU/edit?usp=sharing")
out <- SPI_data %>% filter(code == a) %>% filter(year == b)
return(out)
}
}
f(,"2018")
sqs_spi_country <- function(COUNTRY){
SPI_data <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1_nQ9mQU_4J0KDRc4_TMzTsJHMYBqLwwnPaMC5BVhkGc/edit#gid=0")
SPI_country <- unique(SPI_data[,1:2])
if (missing(COUNTRY)) {
SPI_country
} else {
SPI_country[grep(COUNTRY,SPI_country$country),]
}
f <- function(a = SPI_country, b = "2019") {
SPI_data <- gsheet::gsheet2tbl("https://docs.google.com/spreadsheets/d/1OWdDf8ibm_QmmOGiuTu9R1ZN6mDg-Hqf9qdJjkp6UyU/edit?usp=sharing")
out <- SPI_data %>% filter(code == a) %>% filter(year == b)
return(out)
}
}
f(a=c("USA", "FRA"), b="2018")
f <- function(a = c("USA", "CAN", "FRA", "AUT", "BDI"), b = "2019") {
SPI_data <- gsheet::gsheet2tbl("https://docs.google.com/spreadsheets/d/1OWdDf8ibm_QmmOGiuTu9R1ZN6mDg-Hqf9qdJjkp6UyU/edit?usp=sharing")
out <- SPI_data %>% filter(code == a) %>% filter(year == b)
return(out)
}
f(a=c("USA", "FRA"), b="2018")
f(a="USA", b="2019")
f(,"2018")
library(reshape2)
library(reshape2)
SPI_data <- gsheet::gsheet2tbl("https://docs.google.com/spreadsheets/d/1OWdDf8ibm_QmmOGiuTu9R1ZN6mDg-Hqf9qdJjkp6UyU/edit?usp=sharing")
data_long <- melt(SPI_data,
# ID variables - all the variables to keep but not split apart on
id.vars=c("country", "code", "year"),
# The source columns
measure.vars=c("SPI", "BHN", "FOW" ),
# Name of the destination column that will identify the original
# column that the measurement came from
variable.name="INDICATOR_CODE",
value.name="value"
)
data_long
View(data_long)
library(reshape2)
SPI_data <- gsheet::gsheet2tbl("https://docs.google.com/spreadsheets/d/1OWdDf8ibm_QmmOGiuTu9R1ZN6mDg-Hqf9qdJjkp6UyU/edit?usp=sharing")
data_long <- melt(SPI_data,
# ID variables - all the variables to keep but not split apart on
id.vars=c("country", "code", "year"),
# The source columns
measure.vars=c("SPI", "BHN", "FOW" ),
# Name of the destination column that will identify the original
# column that the measurement came from
variable.name="indicator",
value.name="value"
)
data_long
f <- function(a = c("USA", "CAN", "FRA", "AUT", "BDI"), b = "2019") {
out <- SPI_data %>% filter(code == a) %>% filter(year == b)
return(out)
}
f(a=c("USA", "FRA"), b="2018")
f(a="USA", b="2019")
f(,"2018")
library(reshape2)
SPI_data <- gsheet::gsheet2tbl("https://docs.google.com/spreadsheets/d/1OWdDf8ibm_QmmOGiuTu9R1ZN6mDg-Hqf9qdJjkp6UyU/edit?usp=sharing")
data_long <- melt(SPI_data,
# ID variables - all the variables to keep but not split apart on
id.vars=c("country", "code", "year"),
# The source columns
measure.vars=c("SPI", "BHN", "FOW" ),
# Name of the destination column that will identify the original
# column that the measurement came from
variable.name="indicator",
value.name="value"
)
data_long
f <- function(a = c("USA", "CAN", "FRA", "AUT", "BDI"), b = "2019") {
out <- SPI_data %>% filter(code == a) %>% filter(year == b)
return(out)
}
f <- function(a = c("USA", "CAN", "FRA", "AUT", "BDI"), b = "2019") {
out <- SPI_data %>% filter(code == a) %>% filter(year == b)
return(out)
}
f(,"2018")
f("2018")
f(,"2018")
f()
f("USA","2027")
f(a="USA","2027")
f(a="USA",b="2027")
library(reshape2)
SPI_data <- gsheet::gsheet2tbl("https://docs.google.com/spreadsheets/d/1OWdDf8ibm_QmmOGiuTu9R1ZN6mDg-Hqf9qdJjkp6UyU/edit?usp=sharing")
data_long <- melt(SPI_data,
# ID variables - all the variables to keep but not split apart on
id.vars=c("country", "code", "year"),
# The source columns
measure.vars=c("SPI", "BHN", "FOW" ),
# Name of the destination column that will identify the original
# column that the measurement came from
variable.name="indicator",
value.name="value"
)
data_long
f <- function(a = c("USA", "CAN", "FRA", "AUT", "BDI"), b = "2019") {
out <- SPI_data %>% filter(code == a) %>% filter(year == b)
return(out)
}
f(a="USA",b="2027")
f(a="USA",b="2017")
data.frame(f(,"2018"))
f(,"2018")
f(a="USA",b="2017")
out <- data_long %>% filter(code == a) %>% filter(year == b)
library(reshape2)
SPI_data <- gsheet::gsheet2tbl("https://docs.google.com/spreadsheets/d/1OWdDf8ibm_QmmOGiuTu9R1ZN6mDg-Hqf9qdJjkp6UyU/edit?usp=sharing")
data_long <- melt(SPI_data,
# ID variables - all the variables to keep but not split apart on
id.vars=c("country", "code", "year"),
# The source columns
measure.vars=c("SPI", "BHN", "FOW" ),
# Name of the destination column that will identify the original
# column that the measurement came from
variable.name="indicator",
value.name="value"
)
data_long
f <- function(a = c("USA", "CAN", "FRA", "AUT", "BDI"), b = "2019") {
out <- data_long %>% filter(code == a) %>% filter(year == b)
return(out)
}
f(a=c("USA", "FRA"), b="2018")
f(a="USA", b="2019")
f(,"2018")
f(a="USA",b="2017")
f(,"2018")
library(reshape2)
SPI_data <- gsheet::gsheet2tbl("https://docs.google.com/spreadsheets/d/1OWdDf8ibm_QmmOGiuTu9R1ZN6mDg-Hqf9qdJjkp6UyU/edit?usp=sharing")
data_long <- melt(SPI_data,
# ID variables - all the variables to keep but not split apart on
id.vars=c("country", "code", "year"),
# The source columns
measure.vars=c("SPI", "BHN", "FOW" ),
# Name of the destination column that will identify the original
# column that the measurement came from
variable.name="indicator",
value.name="value"
)
library(reshape2)
SPI_data <- gsheet::gsheet2tbl("https://docs.google.com/spreadsheets/d/1OWdDf8ibm_QmmOGiuTu9R1ZN6mDg-Hqf9qdJjkp6UyU/edit?usp=sharing")
data_long <- melt(SPI_data,
# ID variables - all the variables to keep but not split apart on
id.vars=c("country", "code", "year"),
# The source columns
measure.vars=c("SPI", "BHN", "FOW" ),
# Name of the destination column that will identify the original
# column that the measurement came from
variable.name="indicator",
value.name="value"
)
data_long
f <- function(a, b = "2019") {
out <- data_long %>% filter(code == a) %>% filter(year == b)
return(out)
}
f(a=c("USA", "FRA"), b="2018")
f(a="USA", b="2019")
f(,"2018")
f(a="USA",b="2017")
f("","2018")
library(reshape2)
SPI_data <- gsheet::gsheet2tbl("https://docs.google.com/spreadsheets/d/1OWdDf8ibm_QmmOGiuTu9R1ZN6mDg-Hqf9qdJjkp6UyU/edit?usp=sharing")
data_long <- melt(SPI_data,
# ID variables - all the variables to keep but not split apart on
id.vars=c("country", "code", "year"),
# The source columns
measure.vars=c("SPI", "BHN", "FOW" ),
# Name of the destination column that will identify the original
# column that the measurement came from
variable.name="indicator",
value.name="value"
)
data_long
f <- function(a = all(), b = "2019") {
out <- data_long %>% filter(code == a) %>% filter(year == b)
return(out)
}
f(,"2018")
country_list = list("USA","FRA","AUT","CHL")
f <- function(a = country_list, b = "2019") {
out <- data_long %>% filter(code == a) %>% filter(year == b)
return(out)
}
f(a=c("USA", "FRA"), b="2018")
f(a="USA", b="2019")
f(,"2018")
f(a="USA",b="2017")
f(,"2018")
SPI_data <- gsheet::gsheet2tbl("https://docs.google.com/spreadsheets/d/1OWdDf8ibm_QmmOGiuTu9R1ZN6mDg-Hqf9qdJjkp6UyU/edit?usp=sharing")
data_long <- melt(SPI_data,
# ID variables - all the variables to keep but not split apart on
id.vars=c("country", "code", "year"),
# The source columns
measure.vars=c("SPI", "BHN", "FOW" ),
# Name of the destination column that will identify the original
# column that the measurement came from
variable.name="indicator",
value.name="value"
)
data_long
country_list = list("USA","FRA","AUT","CHL")
f <- function(a = country_list, b = "2019") {
out <- data_long %>% filter(code == a) %>% filter(year == b)
return(out)
}
f(,"2018")
year_list = list("2014","2015","2016","2017","2018","2019")
f <- function(a = country_list, b = year_list) {
out <- data_long %>% filter(code == a) %>% filter(year == b)
return(out)
}
f(a=c("USA", "FRA"), b="2018")
f(a="USA", b="2019")
f(,"2018")
f(a="USA",b="2017")
f()
f("USA",)
f(,)
View(country_list)
View(year_list)
View(country_list)
View(SPI_data)
#country_list = list("USA","FRA","AUT","CHL")
country_list = data_long[-(1:2),code]
#country_list = list("USA","FRA","AUT","CHL")
country_list = data_long[-(1:2),data_long$code]
#country_list = list("USA","FRA","AUT","CHL")
country_list = data_long[-(1:2),]
View(country_list)
#country_list = list("USA","FRA","AUT","CHL")
country_list = data_long[-(1),]
View(country_list)
f <- function(a = country_list$code, b = year_list) {
out <- data_long %>% filter(code == a) %>% filter(year == b)
return(out)
}
f(a=c("USA", "FRA"), b="2018")
f(a="USA", b="2019")
f(,"2018")
f(,)
SPI_data <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1_nQ9mQU_4J0KDRc4_TMzTsJHMYBqLwwnPaMC5BVhkGc/edit#gid=0")
View(SPI_data)
SPI_country <- unique(SPI_data[,1:2])
View(SPI_country)
SPI_country[grep(COUNTRY,SPI_country$country),]
View(SPI_country)
View(data_long)
data_long_country <- unique(data_long[,1:2])
View(data_long_country)
data_long_country <- unique(data_long[,2])
year_list = list("2014","2015","2016","2017","2018","2019")
f <- function(a = data_long_country, b = year_list) {
out <- data_long %>% filter(code == a) %>% filter(year == b)
return(out)
}
f(a=c("USA", "FRA"), b="2018")
f(a="USA", b="2019")
f(,"2018")
f(a="USA",b="2017")
f("USA",)
f(,)
sqs_spi_data()
sqs_spi_data(,"2018")
library(reshape2)
SPI_data <- gsheet::gsheet2tbl("https://docs.google.com/spreadsheets/d/1OWdDf8ibm_QmmOGiuTu9R1ZN6mDg-Hqf9qdJjkp6UyU/edit?usp=sharing")
data_long <- melt(SPI_data,
# ID variables - all the variables to keep but not split apart on
id.vars=c("country", "code", "year"),
# The source columns
measure.vars=c("SPI", "BHN", "FOW" ),
# Name of the destination column that will identify the original
# column that the measurement came from
variable.name="indicator",
value.name="value"
)
data_long
# Creating the default values for the function query
#country_list = list("USA","FRA","AUT","CHL")
data_long_country <- unique(data_long[,2])
year_list = list("2014","2015","2016","2017","2018","2019")
sqs_spi_data <- function(a = data_long_country, b = year_list) {
out <- data_long %>% filter(code == a) %>% filter(year == b)
return(out)
}
sqs_spi_data(a=c("USA", "FRA"), b="2018")
sqs_spi_data(a="USA", b="2019")
sqs_spi_data(,"2018")
sqs_spi_data(a="USA",b="2017")
sqs_spi_data("USA",)
sqs_spi_data(,)
sqs_spi_data()
View(data_long)
sqs_spi_data(a=c("USA", "FRA"), b="2018")
sqs_spi_data(a="USA", b="2019")
sqs_spi_data(,"2018")
sqs_spi_data(a="USA",b="2017")
sqs_spi_data("USA",)
sqs_spi_data(,)
sqs_spi_data()
